<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
    axios.interceptors.request.use(function (config) {
      // 在发送请求之前做些什么
      const token = localStorage.getItem("token")
      config.headers.Authorization = `Bearer ${token}`
      return config;
    }, function (error) {
      // 对请求错误做些什么
      console.log(error.response.status, "111")

      return Promise.reject(error);
    });
    // 添加响应拦截器
    axios.interceptors.response.use(function (response) {
      // 2xx 范围内的状态码都会触发该函数。
      // 对响应数据做点什么
      console.log(response.headers, "data is")
      const { authorization } = response.headers
      authorization && localStorage.setItem("token", authorization)
      return response;
    }, function (error) {
      // 超出 2xx 范围的状态码都会触发该函数。
      // 对响应错误做点什么
      if (error.response.status === 401) {
        localStorage.removeItem("token")
        location.href = "/login"
      }
      return Promise.reject(error);
    });
  </script>
  <style>
    td img{
      width: 80px;
      height: 80px;
    }
  </style>
</head>

<body>
  <h1>
    后台系统用户管理功能
    <button id="exit">退出</button>
  </h1>
  <div>
    <div>用户名:<input id="username" /></div>
    <div>密码:<input type="password" id="password" /></div>
    <div>年龄:<input type="number" id="age" /></div>
    <div>头像:<input type="file" id="avatar" /></div>

    <div><button id="register">添加用户</button></div>
  </div>
  <hr>
  <div><button id="update">更新用户</button>
    <button id="remove">删除用户</button>
  </div>
  <hr>
  <table border="1">
    <thead>
      <tr>
        <td>id</td>
        <td>用户名</td>
        <td>年龄</td>
        <td>头像</td>
      </tr>
    </thead>
    <tbody>

    </tbody>
  </table>
  <script>
    var username = document.querySelector("#username")
    var password = document.querySelector("#password")
    var age = document.querySelector("#age")
    var register = document.querySelector("#register")
    var update = document.querySelector("#update")
    var remove = document.querySelector("#remove")
    var exit = document.querySelector("#exit")
    var avatar = document.querySelector("#avatar")
    register.onclick = function () {
      console.log(username.value, password.value, age.value)
      // fetch("/api/user", {
      //   method: "POST",
      //   body: JSON.stringify({
      //     username: username.value,
      //     password: password.value,
      //     age: age.value
      //   }),
      //   headers: {
      //     "Content-type": "application/json"
      //   }
      // }).then(res => res.json()).then(res => {
      //   if (res.ok === 0) {
      //     location.href = "/login"
      //   } else {
      //     listUpdate()
      //   }
      // })
      const formsdata=new FormData()
      formsdata.append("username",username.value)
      formsdata.append("password",password.value)
      formsdata.append("age",age.value)
      formsdata.append("avatar",avatar.files[0])
      axios.post("/api/user",formsdata, { headers:{
        'Content-Type':'multipart/form-data'
      } }).then(res => {
        console.log(res)
        listUpdate()
        // if (res.data.ok === 1) {
        //     //存储token值
        //     location.href = "/"
        // } else {
        //     console.log("用户名和密码不匹配")
        // }
      })
    }
    update.onclick = function () {
      console.log(username.value, password.value, age.value)
      // fetch("/api/user/65406b27f49dbc6f3034f8d0", {
      //   method: "PUT",
      //   body: JSON.stringify({
      //     username: username.value,
      //     password: password.value,
      //     age: "1"
      //   }),
      //   headers: {
      //     "Content-type": "application/json"
      //   }
      // }).then(res => res.json()).then(res => {
      //   if (res.ok === 0) {
      //     location.href = "/login"
      //   } else {
      //     listUpdate()
      //   }
      // })
      axios.put("/api/user/65406b27f49dbc6f3034f8d0", { username: username.value, password: password.value, age: age.value }).then(res => {
        console.log(res)
        listUpdate()
        // if (res.data.ok === 1) {
        //     //存储token值
        //     location.href = "/"
        // } else {
        //     console.log("用户名和密码不匹配")
        // }
      })
    }
    remove.onclick = function () {
      console.log(username.value, password.value, age.value)
      // fetch("/api/user/65406b27f49dbc6f3034f8d0", {
      //   method: "DELETE"
      // }).
      //   then(res => res.json()).then(res => {
      //     if (res.ok === 0) {
      //       location.href = "/login"
      //     } else {
      //       listUpdate()
      //     }

      //   })
      axios.delete("/api/user/65406b27f49dbc6f3034f8d0").then(res => {
        console.log(res)
        listUpdate()
        // if (res.data.ok === 1) {
        //     //存储token值
        //     location.href = "/"
        // } else {
        //     console.log("用户名和密码不匹配")
        // }
      })
    }
    exit.onclick = function () {
      // fetch("/api/logout").
      //   then(res => res.json()).then(res => {
      //     if (res.ok === 1) {
      //       location.href = "/login"
      //     }
      //   })
      axios.get("/api/logout").then(res => {
        console.log(res)
        localStorage.removeItem("token")
        location.href = "/login"
        // if (res.data.ok === 1) {
        //     //存储token值
        //     location.href = "/"
        // } else {
        //     console.log("用户名和密码不匹配")
        // }
      })
    }
    function listUpdate() {
      // fetch("/api/user").then(res => res.json()).then(res => {
      // console.log(res)
      // var tbody = document.querySelector("tbody")
      // tbody.innerHTML = res && res.map(item => `
      // <tr>
      //   <td>${item._id}</td>
      //   <td>${item.username}</td>
      //   <td>${item.age}</td>
      //   </tr>
      // `).join("")
      // })
      axios.get("/api/user").then(res => {
        console.log(res)
        var tbody = document.querySelector("tbody")
        tbody.innerHTML = res.data && res.data.map(item => `
      <tr>
        <td>${item._id}</td>
        <td>${item.username}</td>
        <td>${item.age}</td>
        <td><img src="${item.avatar}""></td>
        </tr>
      `).join("")
        // if (res.data.ok === 1) {
        //     //存储token值
        //     location.href = "/"
        // } else {
        //     console.log("用户名和密码不匹配")
        // }
      })
    }
    listUpdate()

  </script>
</body>

</html>